@inject NavigationManager NavigationManager
@inherits LayoutComponentBase

<MudThemeProvider Theme="_lighthouseNotesTheme" @ref="@_mudThemeProvider" @bind-IsDarkMode="@_darkMode"/>
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudImage Src="img/logo.png" Alt="Lighthouse Notes Logo" Class="rounded-lg" Height="60"
                  Style="padding-right: 12px;"/>
        <MudDivider Vertical="true"/>
        <MudIconButton Icon="@Icons.Material.Filled.Home" Color="Color.Inherit" OnClick="@HomeClick"/>
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Material.Filled.QuestionMark" Color="Color.Inherit" Edge="Edge.End"/>
        <MudMenu Icon="@Icons.Material.Filled.AccountCircle" Color="Color.Inherit" AnchorOrigin="Origin.BottomRight">
            <MudMenuItem Icon="@Icons.Material.Filled.Map" Href="account/localization" ForceLoad="true"> Localization
            </MudMenuItem>
            <MudMenuItem Icon="@Icons.Material.Filled.ManageAccounts" Href="account/profile" ForceLoad="true"> Profile
            </MudMenuItem>
            <AuthorizeView>
                <Authorized>
                    <MudMenuItem Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" Edge="Edge.End"
                                 Href="auth/logout" ForceLoad="true"> Logout
                    </MudMenuItem>
                </Authorized>
                <NotAuthorized>
                    <MudMenuItem Icon="@Icons.Material.Filled.Login" Color="Color.Inherit" Edge="Edge.End"
                                 Href="@_loginUrl" ForceLoad="true"> Login
                    </MudMenuItem>
                </NotAuthorized>
            </AuthorizeView>
        </MudMenu>
    </MudAppBar>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge"
                      class="d-flex justify-center align-content-center flex-nowrap flex-grow-1"
                      Style="height: 80vh; align-items: center;">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {

    // Page variables
    private bool _darkMode;
    private MudThemeProvider _mudThemeProvider = null!;
    private readonly MudTheme _lighthouseNotesTheme = Theme.LighthouseNotesTheme;
    private string _loginUrl = "/account/login?returnUrl=/";
    private string _currentUrl = "/";

    // Component parameters and dependency injection
    [Parameter] public required RenderFragment ChildContent { get; set; }

    // Lifecycle method triggered when parameters are set or changed
    protected override void OnParametersSet()
    {
        // Get current url as an escaped string
        _currentUrl = Uri.EscapeDataString(new Uri(NavigationManager.Uri)
            .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped));

        if (_currentUrl.Contains("logout"))
        {
            _currentUrl = "/";
        }

        // Create login url with redirect ulr to the current page
        _loginUrl = $"/account/login?returnUrl={_currentUrl}";
    }

    // Lifecycle method called after the component has rendered - handles dark mode
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // If this is the first render
        if (firstRender)
        {
            // Set dark mode to true / false based on system preference
            _darkMode = await _mudThemeProvider.GetSystemPreference();

            // Watch system preference for changes
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);

            // Re-render component
            await InvokeAsync(StateHasChanged);
        }
    }


    //  Lifecycle method triggered when system preference change - enable or disable dark mode based on preference
    private async Task OnSystemPreferenceChanged(bool newValue)
    {
        // Set dark mode variable to new system preference
        _darkMode = newValue;

        // Re-render component
        await InvokeAsync(StateHasChanged);
    }

    // Home click - navigate to / on button click
    private void HomeClick()
    {
        NavigationManager.NavigateTo("", true);
    }
}