@page "/organization-administrator/users"
@using System.Globalization
@inherits UsersBase
@attribute [Authorize(Roles = "organization-administrator")]
<PageTitle> Users </PageTitle>

<Page>
    <MudText Typo="Typo.h1" Align="Align.Center"> Users </MudText>
    <MudText Typo="Typo.subtitle1" Align="Align.Center"> To invite a user use the invite user form and click / tap 'Invite'. </MudText>
    <MudText Typo="Typo.subtitle1" Align="Align.Center"> Use the users table to modify or delete existing users. </MudText>

    @* Invite user  *@
    <MudGrid class="my-3">
        <MudItem xs="12" md="6">
            <EditForm Model="@Model" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator/>
                <MudCard>
                    <MudCardHeader>
                        <MudText Typo="Typo.h6"> Invite user </MudText>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudTextField Label="Email address"
                                      @bind-Value="Model.EmailAddress" For="@(() => Model.EmailAddress)"/>
                        <MudSelect T="string" Label="Roles" MultiSelection="true" @bind-SelectedValues="Model.Roles">
                            <MudSelectItem Disabled="true" Value="@("user")"> User </MudSelectItem>
                            <MudSelectItem Value="@("sio")"> SIO </MudSelectItem>
                            <MudSelectItem Value="@("organization-administrator")"> Organization Administrator </MudSelectItem>
                        </MudSelect>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto"> Invite </MudButton>
                    </MudCardActions>
                </MudCard>
            </EditForm>
        </MudItem>

        @* Users table *@
        <MudItem xs="12">
            <MudDataGrid @ref="@UsersTable" T="API.User" ServerData="LoadGridData" ReadOnly="false" EditTrigger="DataGridEditTrigger.Manual" EditMode="DataGridEditMode.Form" CommittedItemChanges="@CommittedItemChanges" SortMode="SortMode.Single">
                <ToolBarContent>
                    <MudText Typo="Typo.h6"> Users </MudText>
                    <MudSpacer/>
                    <MudTextField T="string" @bind-Value="SearchString" Placeholder="Search" Adornment="Adornment.Start"
                                  AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" DebounceInterval="500" OnDebounceIntervalElapsed="@(() => Search())" Clearable="true">
                    </MudTextField>
                </ToolBarContent>
                <Columns>
                    <PropertyColumn Property="x => x.DisplayName" Title="Display Name"/>
                    <PropertyColumn Property="x => x.GivenName" Title="Given Name" Hidden="true"/>
                    <PropertyColumn Property="x => x.LastName" Title="Last Name" Hidden="true"/>
                    <PropertyColumn Property="x => x.JobTitle" Title="Job Title"/>
                    <PropertyColumn Property="x => x.EmailAddress" Title="Email address" Hidden="true"/>
                    <TemplateColumn Title="Roles" Sortable="false">
                        <CellTemplate>
                            <MudChipSet>
                                @foreach (string role in context.Item.Roles)
                                {
                                    @if (role == "sio")
                                    {
                                        <MudChip> @CultureInfo.CurrentUICulture.TextInfo.ToUpper(role) </MudChip>
                                    }
                                    else
                                    {
                                        <MudChip> @CultureInfo.CurrentUICulture.TextInfo.ToTitleCase(role) </MudChip>
                                    }
                                }
                            </MudChipSet >
                        </CellTemplate>
                        <EditTemplate>
                            <MudSelect T="string" Label="Roles" MultiSelection="true" @bind-SelectedValues="context.Item.Roles" @bind-Value="RoleSelectValue" Dense="true" Variant="Variant.Outlined" Required="true">
                                <MudSelectItem T="string" Value="@("sio")"> SIO </MudSelectItem>
                                <MudSelectItem T="string" Value="@("organization administrator")"> Organization Administrator </MudSelectItem>
                            </MudSelect>
                        </EditTemplate>
                    </TemplateColumn>
                    <TemplateColumn Title="Actions" Sortable="false">
                        <CellTemplate>
                            <div class="d-flex gap-2 flex-wrap ">
                                <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.PersonSearch" Color="Color.Primary" Href="@($"/user/{context.Item.Id}")"> More Details </MudButton>
                                <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Edit" Color="Color.Secondary" OnClick="@context.Actions.StartEditingItemAsync"> Edit </MudButton>
                                <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Delete" Color="Color.Warning" OnClick="() => DeleteClick(context.Item.Id, context.Item.DisplayName)"> Delete </MudButton>
                            </div>
                        </CellTemplate>
                    </TemplateColumn>
                </Columns>
                <PagerContent>
                    <MudDataGridPager T="API.User"/>
                </PagerContent>
            </MudDataGrid>
        </MudItem>

    </MudGrid>
</Page>